import config from "./config.js";

const base64ToBytes = (base64) =>
  Uint8Array.from(atob(base64), (char) => char.charCodeAt(0));

const fetchRandomByte = async () => {
  try {
    console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Qrypt API");
    const response = await fetch(config.QRYPT_API_URL, {
      method: "GET",
      headers: {
        Authorization: `Bearer ${config.QRYPT_API_TOKEN}`,
        Accept: "application/json",
        "Content-Type": "application/json",
      },
      mode: "cors",
      credentials: "omit",
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();
    console.log("–°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API:", data);
    return base64ToBytes(data.random[0])[0];
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API:", error);
    return null;
  }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
chrome.runtime.onMessageExternal.addListener(function (
  request,
  sender,
  sendResponse
) {
  console.log("üé≤ 1. –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ:", request.flipNumber || "–Ω–µ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –±—Ä–æ—Å–∫–∞");

  if (request.action === "flip") {
    fetchRandomByte()
      .then((byte) => {
        const result = byte % 2 === 0;
        console.log(`üé≤ 2. –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–Ω–∏—è ${request.flipNumber}: ${result ? "–û—Ä—ë–ª" : "–†–µ—à–∫–∞"}`);
        sendResponse({ 
          success: true, 
          result: result,
          flipNumber: request.flipNumber
        });
      })
      .catch((error) => {
        console.error("üé≤ ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–Ω–∏–∏:", error);
        sendResponse({ success: false, error: error.message });
      });
    return true;
  }
});

console.log("=== COIN FLIP BACKGROUND SERVICE STARTED ===");
